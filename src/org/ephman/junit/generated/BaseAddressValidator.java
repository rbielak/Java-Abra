package org.ephman.junit.generated;

import org.ephman.abra.validation.*;
import java.util.Vector;
/** 
* a Validator for Address in DEFAULT-FORMAT format
 * @version Thu Jun 30 15:12:42 EDT 2005
 * @author generated by Dave Knull
 */

public class BaseAddressValidator extends ValidatorBase {


	public static ValidationResult validate (Address address) {
		Vector errors_ = new Vector ();
		validate (address, "", errors_); // call with empty path
		return new ValidationResult (errors_);
	}


	public static void validate (Address address, Vector errors_) {
		validate (address, "", errors_);
	}

	public static void validate (Address address, String pathWay, Vector errors_) {
		if (address == null) return ;
		if (pathWay != null && pathWay.length () > 0)
			pathWay += ".";
		checkStringLength (address.getTransientInline(), 42, pathWay,  "transientInline", errors_, address);
		checkStringLength (address.getStreet(), 16, pathWay,  "street", errors_, address);
		checkStringLength (address.getState(), 2, pathWay,  "state", errors_, address);
		checkStringLength (address.getCity(), 16, pathWay,  "city", errors_, address);
		checkRegex (address.getState(), _stateProgram, "State Code", pathWay, "state", 4242, errors_, address);

	}


	public static org.apache.regexp.REProgram _IsbnProgram = getREProgram ("[0-9]*");
	public static org.apache.regexp.REProgram _stateProgram = getREProgram ("[a-zA-Z]{2}");

}
