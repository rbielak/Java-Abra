package org.ephman.junit.generated;

import org.ephman.xml.XmlNode;
import java.util.Vector;
/** 
* a XmlMarshaller for Author
 * @version Thu Jun 30 15:12:42 EDT 2005
 * @author generated by Dave Knull
 */

public class AuthorXmlMarshaller {


	public static String marshal (Author author) {
		return marshal (author, "Author", "");
	}

	public static String marshal (Author author, String node_name, String indent_tabs) {
		StringBuffer result = new StringBuffer (indent_tabs).append ("<").append(node_name);
		result.append (marshalAttributes (author));
		String these_els =  marshalElements (author, indent_tabs+"\t");
		if (these_els != null && these_els.length()>0) 
			result.append (these_els).append ("\n").append (indent_tabs).append ("</").append (node_name).append (">\n");
		else
			result.append ("/>");
		return result.toString ();
	}

	public static Author unmarshal (XmlNode thisNode) {
		Author author = new Author ();
		unmarshal (thisNode, author);
		return author;
	}
	/** unmarshal passing Xmlnode + pre-formed	 * Author to populate
	*/
	public static void unmarshal (XmlNode thisNode, Author author) {
		WriterXmlMarshaller.unmarshal (thisNode, author);
	}

	protected static String marshalAttributes (Author author) {
		StringBuffer result = new StringBuffer ();
		result.append (WriterXmlMarshaller.marshalAttributes (author));
		return result.toString ();
	}

	protected static String marshalElements (Author author, String indent_tabs) {
		StringBuffer result = new StringBuffer (indent_tabs);
		result.append (WriterXmlMarshaller.marshalElements (author, indent_tabs));
		return result.toString ();
	}

}
