package org.ephman.junit.generated;

import org.ephman.abra.validation.*;
import java.util.Vector;
/** 
* a Validator for Author in DEFAULT-FORMAT format
 * @version Thu Jun 30 15:12:42 EDT 2005
 * @author generated by Dave Knull
 */

public class BaseAuthorValidator extends ValidatorBase {


	public static ValidationResult validate (Author author) {
		Vector errors_ = new Vector ();
		validate (author, "", errors_); // call with empty path
		return new ValidationResult (errors_);
	}


	public static void validate (Author author, Vector errors_) {
		validate (author, "", errors_);
	}

	public static void validate (Author author, String pathWay, Vector errors_) {
		if (author == null) return ;
		if (pathWay != null && pathWay.length () > 0)
			pathWay += ".";
		BaseWriterValidator.validate (author, pathWay, errors_);

	}



}
